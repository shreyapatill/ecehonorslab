By: Alex Zhang, Shreya Patil, Aryan Gupta
Project Proposal Guideline
Introduction



Statement of Purpose
The goal of our project is to construct and program a machine that can autonomously solve a Rubik’s Cube puzzle, starting from any random combination. 

Background Research

We are working on this project because we thought it would be cool to create something that could solve the complicated puzzle that is the Rubik’s Cube. We looked into what people have used to build a Rubik’s cube solver and modified their designs to build our project.
This project is similar to the Rubik’s Cube Solver back in Spring 2020. However, we plan to make the mechanical frame out of legos or 3d printing to cut down on cost and need for mechanical design experience. We also plan to use two cameras to scan the faces of the cube. 


System Overview

Rubik’s Cube: Would be a shame if this were missing...
UI: Where a human can input the colors of the faces. This is the input of the machine.
Each color has a number, you run a python code that allows you to type in the numbers that represent the cube
Data is sent to the Raspberry Pi by USB wire
IR Sensor: Senses whether the cube is in position and ready to be solved
Raspberry Pi: The brains. Figures out the status of the cube, calculates the solution, and sends the moves to the motors
Motor Drivers: The interface between the motor and the Pi
Stepper Motors: Rotates the faces of the cube to solve it


Parts

Rubik’s Cube
Rubik's Cube on Amazon
$6
Raspberry Pi 3 B+
ECE Supply Center - 740162520
$42
Raspberry Pi Power Supply
ECE Supply Center - 740162522
$11
MicroSD Card
MicroSD Card on Amazon 
$6
Six Stepper Motors
Stepper Motor
6 * 6 = $36 total
Holding torque: 0.26Nm (need 0.05Nm for speedcubes)
Set of Three Motor Drivers
Set of Three Motor Drivers on Amazon
$30
Mechanical Frame (3d printed or legos)
IR Sensors
IR Sensor on Amazon 
$9
TOTAL: $140 + legos (if we plan to go with those)
 
Possible Challenges

Frame design &  material (lego or 3-D printing?)
Creating a UI to input faces
Virtual communications/construction
Code it so the solver stops at the solution
 
References

	[1]J. Flatland and P. Rose, "jayflatland/HighFrequencyTwister", GitHub, 2020. [Online]. Available: https://github.com/jayflatland/HighFrequencyTwister/blob/master/LICENSE. [Accessed: 18- Sep- 2020].
	[2]"Adafruit's Raspberry Pi Lesson 10. Stepper Motors", Adafruit Learning System, 2020. [Online]. Available: https://learn.adafruit.com/adafruits-raspberry-pi-lesson-10-stepper-motors. [Accessed: 18- Sep- 2020].
	[3]N. Knopf and J. Swiezy, Web.mit.edu, 2020. [Online]. Available: http://web.mit.edu/6.111/www/f2017/projects/knopf_Project_Design_Presentation.pdf. [Accessed: 18- Sep- 2020].
	[4]"rubix cube transparent - Google Search", Google.com, 2020. [Online]. Available: https://www.google.com/search?q=rubix+cube+transparent&tbm=isch&ved=2ahUKEwje7rqF2PHrAhXXO80KHXg_AiAQ2-cCegQIABAA&oq=rubix+cube+tra&gs_lcp=CgNpbWcQARgAMgIIADICCAAyAggAMgIIADIGCAAQCBAeMgYIABAIEB4yBggAEAgQHjIGCAAQCBAeMgYIABAIEB4yBggAEAgQHjoECAAQQ1ClmDJY3KYyYIqwMmgAcAB4AIABVYgBvgKSAQE0mAEAoAEBqgELZ3dzLXdpei1pbWfAAQE&sclient=img&ei=bx9kX577LNf3tAb4_oiAAg&bih=937&biw=1920&rlz=1C1CHBF_enUS910US910#imgrc=FZIFQ5bO0elW9M. [Accessed: 18- Sep- 2020].
	[5]SenorJuan, “Torque on Conventional Cubes,” SpeedSolving Puzzles Community, 27-Jan-2020. [Online]. Available: https://www.speedsolving.com/threads/torque-on-conventional-cubes.76309/. [Accessed: 20-Sep-2020]. 
	[6]"MineLT/CubeSolver", GitHub, 2020. [Online]. Available: https://github.com/MineLT/CubeSolver. [Accessed: 27- Sep- 2020].
